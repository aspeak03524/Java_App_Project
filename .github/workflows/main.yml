name: Deploy Java Application on AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build, Test, and Generate Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set up Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean install

      - name: Run Tests with Maven
        run: mvn test

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: java-application
          path: target/*.jar

  deploy:
    name: Deploy to AWS
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Copy Artifact to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} target/*.jar ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/

      - name: Start Application on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          nohup java -jar /home/ec2-user/*.jar &
          EOF
